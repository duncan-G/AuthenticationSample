{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "EC2DataSources",
      "Effect": "Allow",
      "Action": [
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeImages",
        "ec2:DescribeRegions"
      ],
      "Resource": "*"
    },
    {
      "Sid": "EC2ReadOperations",
      "Effect": "Allow",
      "Action": [
        "ec2:Describe*"
      ],
      "Resource": "*"
    },
    {
      "Sid": "EC2WriteOperations",
      "Effect": "Allow",
      "Action": [
        "ec2:Create*",
        "ec2:Delete*",
        "ec2:Attach*",
        "ec2:Detach*",
        "ec2:Modify*",
        "ec2:Associate*",
        "ec2:Disassociate*",
        "ec2:RunInstances",
        "ec2:TerminateInstances",
        "ec2:StartInstances",
        "ec2:StopInstances",
        "ec2:Revoke*",
        "ec2:Authorize*"
      ],
      "Resource": "*"
    },
    {
      "Sid": "VPCManagement",
      "Effect": "Allow",
      "Action": [
        "ec2:Describe*",
        "ec2:Create*",
        "ec2:Delete*",
        "ec2:Modify*",
        "ec2:AllocateAddress",
        "ec2:ReleaseAddress",
        "ec2:AssociateAddress",
        "ec2:DisassociateAddress",
        "ec2:AcceptVpcPeeringConnection",
        "ec2:RejectVpcPeeringConnection"
      ],
      "Resource": "*"
    },
    {
      "Sid": "SSMParameterManagement",
      "Effect": "Allow",
      "Action": [
        "ssm:PutParameter",
        "ssm:GetParameter",
        "ssm:GetParameters",
        "ssm:DeleteParameter",
        "ssm:DeleteParameters",
        "ssm:CreateDocument",
        "ssm:UpdateDocument",
        "ssm:DeleteDocument",
        "ssm:DescribeDocument",
        "ssm:ListDocuments",
        "ssm:GetDocument",
        "ssm:AddTagsToResource",
        "ssm:DescribeDocumentPermission",
        "ssm:UpdateDocumentDefaultVersion"
      ],
      "Resource": [
        "arn:aws:ssm:*:*:parameter/docker/swarm/*",
        "arn:aws:ssm:*:*:document/${APP_NAME}-*"
      ]
    },
    {
      "Sid": "SSMParameterDiscovery",
      "Effect": "Allow",
      "Action": [
        "ssm:DescribeParameters",
        "ssm:GetParametersByPath"
      ],
      "Resource": "*"
    },
    {
      "Sid": "SSMAssociationManagement",
      "Effect": "Allow",
      "Action": [
        "ssm:CreateAssociation",
        "ssm:UpdateAssociation",
        "ssm:DeleteAssociation",
        "ssm:DescribeAssociation",
        "ssm:ListAssociations",
        "ssm:ListTagsForResource",
        "ssm:GetAutomationExecution",
        "ssm:StartAutomationExecution",
        "ssm:StopAutomationExecution"
      ],
      "Resource": "*"
    },
    {
      "Sid": "IAMForInstanceRoles",
      "Effect": "Allow",
      "Action": [
        "iam:Create*",
        "iam:Delete*",
        "iam:Tag*",
        "iam:Untag*",
        "iam:Get*",
        "iam:List*",
        "iam:Put*",
        "iam:Attach*",
        "iam:Detach*",
        "iam:AddRoleToInstanceProfile",
        "iam:RemoveRoleFromInstanceProfile"
      ],
      "Resource": [
        "arn:aws:iam::*:role/${APP_NAME}-*",
        "arn:aws:iam::*:policy/${APP_NAME}-*",
        "arn:aws:iam::*:instance-profile/${APP_NAME}-*",
        "arn:aws:iam::*:oidc-provider/token.actions.githubusercontent.com"
      ]
    },
    {
      "Sid": "PassRoleConstraint",
      "Effect": "Allow",
      "Action": "iam:PassRole",
      "Resource": [
        "arn:aws:iam::${AWS_ACCOUNT_ID}:role/${APP_NAME}-*"
      ],
      "Condition": {
        "StringEquals": {
          "iam:PassedToService": [
            "ec2.amazonaws.com",
            "codedeploy.amazonaws.com"
          ]
        }
      }
    },
    {
      "Sid": "STSRead",
      "Effect": "Allow",
      "Action": "sts:GetCallerIdentity",
      "Resource": "*"
    },
    {
      "Sid": "S3BucketPermissions",
      "Effect": "Allow",
      "Action": [
        "s3:Get*",
        "s3:ListBucket",
        "s3:CreateBucket",
        "s3:PutObject",
        "s3:DeleteObject",
        "s3:PutBucketVersioning",
        "s3:PutBucketTagging",
        "s3:PutBucketPublicAccessBlock"
      ],
      "Resource": [
        "arn:aws:s3:::${TF_STATE_BUCKET}",
        "arn:aws:s3:::${TF_STATE_BUCKET}/*",
        "arn:aws:s3:::${DEPLOYMENT_BUCKET}",
        "arn:aws:s3:::${DEPLOYMENT_BUCKET}/*",
        "arn:aws:s3:::${CERTIFICATE_BUCKET}",
        "arn:aws:s3:::${CERTIFICATE_BUCKET}/*"
      ]
    },
    {
      "Sid": "CodeDeployPermissions",
      "Effect": "Allow",
      "Action": [
        "codedeploy:*"
      ],
      "Resource": "*"
    },
    {
      "Sid": "CloudWatchLogsPermissions",
      "Effect": "Allow",
      "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:DeleteLogGroup",
        "logs:DeleteLogStream",
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy",
        "logs:GetLogEvents",
        "logs:FilterLogEvents",
        "logs:TagResource",
        "logs:ListTagsForResource"
      ],
      "Resource": "*"
    },
    {
      "Sid": "Route53Permissions",
      "Effect": "Allow",
      "Action": [
        "route53:CreateHostedZone",
        "route53:DeleteHostedZone",
        "route53:GetHostedZone",
        "route53:ListHostedZones",
        "route53:ListHostedZonesByName",
        "route53:ChangeResourceRecordSets",
        "route53:GetChange",
        "route53:ListResourceRecordSets",
        "route53:ListTagsForResource",
        "route53:ListTagsForResources"
      ],
      "Resource": "*"
    },
    {
      "Sid": "ECRPermissions",
      "Effect": "Allow",
      "Action": [
        "ecr:Create*",
        "ecr:Delete*",
        "ecr:Describe*",
        "ecr:List*",
        "ecr:Tag*",
        "ecr:Untag*",
        "ecr:Get*",
        "ecr:Set*",
        "ecr:Put*"
      ],
      "Resource": [
        "arn:aws:ecr:*:${AWS_ACCOUNT_ID}:repository/${APP_NAME}/*"
      ]
    },
    {
      "Sid": "SSOAdminPermissions",
      "Effect": "Allow",
      "Action": [
        "sso:CreatePermissionSet",
        "sso:DeletePermissionSet",
        "sso:DescribePermissionSet",
        "sso:ListPermissionSets",
        "sso:ProvisionPermissionSet",
        "sso:PutInlinePolicyToPermissionSet",
        "sso:DeleteInlinePolicyFromPermissionSet",
        "sso:GetInlinePolicyForPermissionSet",
        "sso:AttachManagedPolicyToPermissionSet",
        "sso:DetachManagedPolicyFromPermissionSet",
        "sso:ListManagedPoliciesInPermissionSet",
        "sso:TagResource",
        "sso:UntagResource",
        "sso:ListTagsForResource",
        "sso:ListInstances",
        "sso:DescribeInstance",
        "sso:DescribePermissionSetProvisioningStatus"
      ],
      "Resource": "*"
    },
    {
      "Sid": "SSOIdentityStoreGroupPermissions",
      "Effect": "Allow",
      "Action": [
        "identitystore:CreateGroup",
        "identitystore:DeleteGroup",
        "identitystore:DescribeGroup",
        "identitystore:ListGroups",
        "identitystore:UpdateGroup"
      ],
      "Resource": "*"
    },
    {
      "Sid": "SSOIAMPermissions",
      "Effect": "Allow",
      "Action": [
        "iam:GetRole",
        "iam:ListRoles",
        "iam:ListRolePolicies",
        "iam:GetRolePolicy",
        "iam:ListAttachedRolePolicies"
      ],
      "Resource": [
        "arn:aws:iam::*:role/AWSReservedSSO_*",
        "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
      ]
    },
    {
      "Sid": "SecretsManagerPermissions",
      "Effect": "Allow",
      "Action": [
        "secretsmanager:CreateSecret",
        "secretsmanager:DeleteSecret",
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue",
        "secretsmanager:UpdateSecretVersionStage",
        "secretsmanager:ListSecrets",
        "secretsmanager:TagResource",
        "secretsmanager:UntagResource",
        "secretsmanager:ListSecretVersionIds",
        "secretsmanager:GetResourcePolicy",
        "secretsmanager:PutResourcePolicy",
        "secretsmanager:DeleteResourcePolicy"
      ],
      "Resource": [
        "arn:aws:secretsmanager:*:${AWS_ACCOUNT_ID}:secret:${APP_NAME}-secrets-development*"
      ]
    }
  ]
}
