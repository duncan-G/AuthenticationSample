# Envoy route discovery configuration that defines how incoming requests are routed to backend services
# This configuration sets up a virtual host with routing rules and CORS settings

resources:
- "@type": type.googleapis.com/envoy.config.route.v3.RouteConfiguration
  name: service_routes
  virtual_hosts:
    - name: service_routes_virtual_host
      domains: [$ALLOWED_HOSTS]
      typed_per_filter_config:
        envoy.filters.http.cors:
          "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.CorsPolicy
          allow_origin_string_match:
 $PROCESSED_ORIGINS
          allow_methods: "GET,POST,PUT,DELETE,OPTIONS"
          allow_headers: "keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,authorization,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,traceparent,tracestate,b3,baggage"
          expose_headers: "grpc-status,grpc-message,error-code"
          max_age: "1728000"
      response_headers_to_add:
        - header:
            key: "alt-svc"
            value: 'h3=":443"; ma=86400'
      routes:
        - match:
            prefix: "/auth/auth.SignUpManager/"
          route:
            cluster: authentication_cluster
            prefix_rewrite: "/auth.SignUpManager/"
            timeout: 0s
            max_stream_duration:
              grpc_timeout_header_max: 0s
          typed_per_filter_config:
            envoy.filters.http.local_ratelimit:
              "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
              stat_prefix: http_local_rate_limiter
              token_bucket:
                max_tokens: 50
                tokens_per_fill: 50
                fill_interval: 1s
              filter_enabled:
                default_value:
                  numerator: 100
                  denominator: HUNDRED
              filter_enforced:
                default_value:
                  numerator: 100
                  denominator: HUNDRED
        - match:
            prefix: "/auth/" 
          route:
            cluster: authentication_cluster
            prefix_rewrite: "/"
            timeout: 0s
            max_stream_duration:
              grpc_timeout_header_max: 0s
        - match:
            prefix: "/otlp/v1/"
          route:
            cluster: otel_collector_http
            prefix_rewrite: "/v1/"
            timeout: 0s
          tracing:
            client_sampling:
              numerator: 0
              denominator: HUNDRED
            random_sampling:
              numerator: 0
              denominator: HUNDRED
            overall_sampling:
              numerator: 0
              denominator: HUNDRED
